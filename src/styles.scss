@use "sass:map";
@use "sass:color";

@import "../node_modules/bootstrap/scss/mixins/_banner.scss";
@include bsBanner("");

@import "../node_modules/bootstrap/scss/_functions.scss";

$font-size-base: 1rem;
$border-radius: 1.5rem;

@import "../node_modules/bootstrap/scss/_variables.scss";
@import "../node_modules/bootstrap/scss/_variables-dark.scss";

$custom-colors: (
    "main":rgb(0, 217, 255),
    "fondos": rgb(7, 76, 131),
    "bordes":rgb(7, 76, 131),
    "boton":rgb(255, 255, 255)
);

$theme-colors: map.merge($theme-colors, $custom-colors);

@import "../node_modules/bootstrap/scss/_maps.scss";
@import "../node_modules/bootstrap/scss/_mixins.scss";
@import "../node_modules/bootstrap/scss/_utilities.scss";

// Layout & components
@import "../node_modules/bootstrap/scss/_root.scss";
@import "../node_modules/bootstrap/scss/_reboot.scss";
@import "../node_modules/bootstrap/scss/_type.scss";
@import "../node_modules/bootstrap/scss/_images.scss";
@import "../node_modules/bootstrap/scss/_containers.scss";
@import "../node_modules/bootstrap/scss/_grid.scss";
@import "../node_modules/bootstrap/scss/_tables.scss";
@import "../node_modules/bootstrap/scss/_forms.scss";
@import "../node_modules/bootstrap/scss/_buttons.scss";
@import "../node_modules/bootstrap/scss/_transitions.scss";
@import "../node_modules/bootstrap/scss/_dropdown.scss";
@import "../node_modules/bootstrap/scss/_button-group.scss";
@import "../node_modules/bootstrap/scss/_nav.scss";
@import "../node_modules/bootstrap/scss/_navbar.scss";
@import "../node_modules/bootstrap/scss/_card.scss";
@import "../node_modules/bootstrap/scss/_accordion.scss";
@import "../node_modules/bootstrap/scss/_breadcrumb.scss";
@import "../node_modules/bootstrap/scss/_pagination.scss";
@import "../node_modules/bootstrap/scss/_badge.scss";
@import "../node_modules/bootstrap/scss/_alert.scss";
@import "../node_modules/bootstrap/scss/_progress.scss";
@import "../node_modules/bootstrap/scss/_list-group.scss";
@import "../node_modules/bootstrap/scss/_close.scss";
@import "../node_modules/bootstrap/scss/_toasts.scss";
@import "../node_modules/bootstrap/scss/_modal.scss";
@import "../node_modules/bootstrap/scss/_tooltip.scss";
@import "../node_modules/bootstrap/scss/_popover.scss";
@import "../node_modules/bootstrap/scss/_carousel.scss";
@import "../node_modules/bootstrap/scss/_spinners.scss";
@import "../node_modules/bootstrap/scss/_offcanvas.scss";
@import "../node_modules/bootstrap/scss/_placeholders.scss";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/_api.scss";
// scss-docs-end import-stack

// ===========================
// EJEMPLOS DE SASS
// ===========================

// 1) FUNCIONES CUSTOM
// Ejemplo: oscurece un poco el color si su "lightness" es alta
@function darkenIfBright($color, $percentage: 10%) {
    @if (lightness($color) > 50%) {
      @return darken($color, $percentage);
    } @else {
      @return $color;
    }
  }
  
  // 2) MIXIN
  // Mixin para estilos de encabezados, reutilizable en banners, secciones, etc.
  @mixin heading-style($size, $color, $weight: 600) {
    font-size: $size;
    color: $color;
    font-weight: $weight;
    margin-bottom: 1rem;
    line-height: 1.2;
  }
  
  // 3) NESTING
  // Un ejemplo de bloque "banner" con estilos anidados
  .banner {
    background-color: map-get($custom-colors, "fondos");
    color: map-get($custom-colors, "boton");
    padding: 2rem;
    text-align: center;
  
    .banner-title {
      @include heading-style(2rem, map-get($custom-colors, "main"));
      // Podrías extender (inherit) estilos de .h2 de Bootstrap, p.ej:
      @extend .h2;  
    }
  
    .banner-subtitle {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      // Ejemplo de usar la función:
      color: darkenIfBright(map-get($custom-colors, "main"), 5%);
    }
  
    .banner-cta {
      @extend .btn;            // Usar estilos de Bootstrap .btn
      @extend .btn-primary;    // Y mezclarlos con .btn-primary
      border-radius: 1rem;
      padding: 0.75rem 1.5rem;
    }
  }
  
  // 4) CONTROL FLOW STATEMENTS
  // Generar 3 clases con colores distintos según nivel
  @for $i from 1 through 3 {
    .alert-level-#{$i} {
      @if $i == 1 {
        background-color: map-get($custom-colors, "main");
      } @else if $i == 2 {
        background-color: map-get($custom-colors, "fondos");
      } @else {
        background-color: map-get($custom-colors, "bordes");
      }
  
      color: #fff;
      padding: 1rem;
      margin: 1rem 0;
      border-radius: 0.5rem;
    }
  }
  